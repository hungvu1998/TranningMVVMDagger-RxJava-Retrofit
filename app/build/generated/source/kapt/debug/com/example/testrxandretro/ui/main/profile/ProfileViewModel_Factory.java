// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.ui.main.profile;

import com.example.testrxandretro.viewmodels.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class ProfileViewModel_Factory implements Factory<ProfileViewModel> {
  private final Provider<SessionManager> sessionManagerProvider;

  public ProfileViewModel_Factory(Provider<SessionManager> sessionManagerProvider) {
    this.sessionManagerProvider = sessionManagerProvider;
  }

  @Override
  public ProfileViewModel get() {
    return provideInstance(sessionManagerProvider);
  }

  public static ProfileViewModel provideInstance(Provider<SessionManager> sessionManagerProvider) {
    return new ProfileViewModel(sessionManagerProvider.get());
  }

  public static ProfileViewModel_Factory create(Provider<SessionManager> sessionManagerProvider) {
    return new ProfileViewModel_Factory(sessionManagerProvider);
  }

  public static ProfileViewModel newProfileViewModel(SessionManager sessionManager) {
    return new ProfileViewModel(sessionManager);
  }
}
