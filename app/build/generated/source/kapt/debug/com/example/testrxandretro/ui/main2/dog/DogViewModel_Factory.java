// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.ui.main2.dog;

import com.example.testrxandretro.viewmodels.SessionValueBreed;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DogViewModel_Factory implements Factory<DogViewModel> {
  private final Provider<SessionValueBreed> sessionValueBreedProvider;

  public DogViewModel_Factory(Provider<SessionValueBreed> sessionValueBreedProvider) {
    this.sessionValueBreedProvider = sessionValueBreedProvider;
  }

  @Override
  public DogViewModel get() {
    return provideInstance(sessionValueBreedProvider);
  }

  public static DogViewModel provideInstance(
      Provider<SessionValueBreed> sessionValueBreedProvider) {
    return new DogViewModel(sessionValueBreedProvider.get());
  }

  public static DogViewModel_Factory create(Provider<SessionValueBreed> sessionValueBreedProvider) {
    return new DogViewModel_Factory(sessionValueBreedProvider);
  }

  public static DogViewModel newDogViewModel(SessionValueBreed sessionValueBreed) {
    return new DogViewModel(sessionValueBreed);
  }
}
