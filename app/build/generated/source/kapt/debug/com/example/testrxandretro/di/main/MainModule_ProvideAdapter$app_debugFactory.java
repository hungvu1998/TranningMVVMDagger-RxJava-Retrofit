// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.di.main;

import com.example.testrxandretro.ui.main.post.PostsRecyclerAdapter;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

public final class MainModule_ProvideAdapter$app_debugFactory
    implements Factory<PostsRecyclerAdapter> {
  private final MainModule module;

  public MainModule_ProvideAdapter$app_debugFactory(MainModule module) {
    this.module = module;
  }

  @Override
  public PostsRecyclerAdapter get() {
    return provideInstance(module);
  }

  public static PostsRecyclerAdapter provideInstance(MainModule module) {
    return proxyProvideAdapter$app_debug(module);
  }

  public static MainModule_ProvideAdapter$app_debugFactory create(MainModule module) {
    return new MainModule_ProvideAdapter$app_debugFactory(module);
  }

  public static PostsRecyclerAdapter proxyProvideAdapter$app_debug(MainModule instance) {
    return Preconditions.checkNotNull(
        instance.provideAdapter$app_debug(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
