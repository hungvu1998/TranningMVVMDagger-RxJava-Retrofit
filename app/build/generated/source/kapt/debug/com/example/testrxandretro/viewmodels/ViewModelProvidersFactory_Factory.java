// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.viewmodels;

import androidx.lifecycle.ViewModel;
import dagger.internal.Factory;
import java.util.Map;
import javax.inject.Provider;

public final class ViewModelProvidersFactory_Factory implements Factory<ViewModelProvidersFactory> {
  private final Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider;

  public ViewModelProvidersFactory_Factory(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    this.creatorsProvider = creatorsProvider;
  }

  @Override
  public ViewModelProvidersFactory get() {
    return provideInstance(creatorsProvider);
  }

  public static ViewModelProvidersFactory provideInstance(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    return new ViewModelProvidersFactory(creatorsProvider.get());
  }

  public static ViewModelProvidersFactory_Factory create(
      Provider<Map<Class<? extends ViewModel>, Provider<ViewModel>>> creatorsProvider) {
    return new ViewModelProvidersFactory_Factory(creatorsProvider);
  }

  public static ViewModelProvidersFactory newViewModelProvidersFactory(
      Map<Class<? extends ViewModel>, Provider<ViewModel>> creators) {
    return new ViewModelProvidersFactory(creators);
  }
}
