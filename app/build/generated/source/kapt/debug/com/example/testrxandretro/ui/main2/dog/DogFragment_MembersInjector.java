// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.ui.main2.dog;

import androidx.fragment.app.Fragment;
import com.example.testrxandretro.viewmodels.ViewModelProvidersFactory;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerFragment_MembersInjector;
import javax.inject.Provider;

public final class DogFragment_MembersInjector implements MembersInjector<DogFragment> {
  private final Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider;

  private final Provider<ViewModelProvidersFactory> providerFactoryProvider;

  public DogFragment_MembersInjector(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvidersFactory> providerFactoryProvider) {
    this.childFragmentInjectorProvider = childFragmentInjectorProvider;
    this.providerFactoryProvider = providerFactoryProvider;
  }

  public static MembersInjector<DogFragment> create(
      Provider<DispatchingAndroidInjector<Fragment>> childFragmentInjectorProvider,
      Provider<ViewModelProvidersFactory> providerFactoryProvider) {
    return new DogFragment_MembersInjector(childFragmentInjectorProvider, providerFactoryProvider);
  }

  @Override
  public void injectMembers(DogFragment instance) {
    DaggerFragment_MembersInjector.injectChildFragmentInjector(
        instance, childFragmentInjectorProvider.get());
    injectProviderFactory(instance, providerFactoryProvider.get());
  }

  public static void injectProviderFactory(
      DogFragment instance, ViewModelProvidersFactory providerFactory) {
    instance.providerFactory = providerFactory;
  }
}
