// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.ui.main2.detaildog;

import com.example.testrxandretro.viewmodels.SessionValueBreed;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class DetailDogViewModel_Factory implements Factory<DetailDogViewModel> {
  private final Provider<SessionValueBreed> sessionValueBreedProvider;

  public DetailDogViewModel_Factory(Provider<SessionValueBreed> sessionValueBreedProvider) {
    this.sessionValueBreedProvider = sessionValueBreedProvider;
  }

  @Override
  public DetailDogViewModel get() {
    return provideInstance(sessionValueBreedProvider);
  }

  public static DetailDogViewModel provideInstance(
      Provider<SessionValueBreed> sessionValueBreedProvider) {
    return new DetailDogViewModel(sessionValueBreedProvider.get());
  }

  public static DetailDogViewModel_Factory create(
      Provider<SessionValueBreed> sessionValueBreedProvider) {
    return new DetailDogViewModel_Factory(sessionValueBreedProvider);
  }

  public static DetailDogViewModel newDetailDogViewModel(SessionValueBreed sessionValueBreed) {
    return new DetailDogViewModel(sessionValueBreed);
  }
}
