// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.di;

import com.example.testrxandretro.data.sources.local.BreedDao;
import com.example.testrxandretro.data.sources.local.Database;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class AppModule_ProvideBreedDaoFactory implements Factory<BreedDao> {
  private final AppModule module;

  private final Provider<Database> databaseProvider;

  public AppModule_ProvideBreedDaoFactory(AppModule module, Provider<Database> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public BreedDao get() {
    return provideInstance(module, databaseProvider);
  }

  public static BreedDao provideInstance(AppModule module, Provider<Database> databaseProvider) {
    return proxyProvideBreedDao(module, databaseProvider.get());
  }

  public static AppModule_ProvideBreedDaoFactory create(
      AppModule module, Provider<Database> databaseProvider) {
    return new AppModule_ProvideBreedDaoFactory(module, databaseProvider);
  }

  public static BreedDao proxyProvideBreedDao(AppModule instance, Database database) {
    return Preconditions.checkNotNull(
        instance.provideBreedDao(database),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
