// Generated by Dagger (https://google.github.io/dagger).
package com.example.testrxandretro.ui.main.post;

import com.example.testrxandretro.network.main.MainApi;
import com.example.testrxandretro.viewmodels.SessionManager;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PostViewModel_Factory implements Factory<PostViewModel> {
  private final Provider<MainApi> mainApiProvider;

  private final Provider<SessionManager> sessionManagerProvider;

  public PostViewModel_Factory(
      Provider<MainApi> mainApiProvider, Provider<SessionManager> sessionManagerProvider) {
    this.mainApiProvider = mainApiProvider;
    this.sessionManagerProvider = sessionManagerProvider;
  }

  @Override
  public PostViewModel get() {
    return provideInstance(mainApiProvider, sessionManagerProvider);
  }

  public static PostViewModel provideInstance(
      Provider<MainApi> mainApiProvider, Provider<SessionManager> sessionManagerProvider) {
    return new PostViewModel(mainApiProvider.get(), sessionManagerProvider.get());
  }

  public static PostViewModel_Factory create(
      Provider<MainApi> mainApiProvider, Provider<SessionManager> sessionManagerProvider) {
    return new PostViewModel_Factory(mainApiProvider, sessionManagerProvider);
  }

  public static PostViewModel newPostViewModel(MainApi mainApi, SessionManager sessionManager) {
    return new PostViewModel(mainApi, sessionManager);
  }
}
